"use strict";

const express = require(`express`);
const request = require(`supertest`);
const Sequelize = require(`sequelize`);
const initDB = require(`../lib/init-db`);
const searchRoutes = require(`./search-routes`);
const SearchService = require(`../data-service/search-service`);
const {HttpCode, users} = require(`../../constants`);

const mockDB = new Sequelize(
    `mockdb`,
    `tyort_1986`,
    `atlanta666`,
    {
      host: `127.0.0.1`,
      port: 5432,
      dialect: `postgres`,
      pool: {
        max: 5,
        min: 0,
        acquire: 10000,
        idle: 10000
      }
    }
);

const mockCategories = [
  `Программирование`,
  `Разное`,
  `Политика`,
  `Спорт`,
  `Музыка`,
];

const mockArticles = [
  {
    "title": `Борьба с прокрастинацией`,
    "announce": `Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры.   Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике.`,
    "fullText": `Это один из лучших рок-музыкантов.   Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать`,
    "categories": [`Программирование`, `Политика`],
    "picture": `asddDeqw.jpg`,
    "comments": [
      {
        "text": `Согласен с автором! Планируете записать видосик на эту тему?`
      },
      {
        "text": `Это где ж такие красоты? Совсем немного... Хочу такую же футболку :-)`
      },
      {
        "text": `Мне кажется или я уже читал это где-то? Это где ж такие красоты?!`
      },
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили.`
      },
      {
        "text": `Плюсую, но слишком много буквы! Совсем немного... Согласен с автором!`
      }
    ]
  },
  {
    "title": `Как перестать беспокоиться и начать жить`,
    "announce": `Золотое сечение — соотношение двух величин, гармоническая пропорция.`,
    "fullText": `Золотое сечение — соотношение двух величин, гармоническая пропорция.   Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике.`,
    "categories": [`Разное`, `Спорт`],
    "picture": `asddDeqw.jpg`,
    "comments": [
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили. Хочу такую же футболку :-) Это где ж такие красоты?`
      },
      {
        "text": `Это где ж такие красоты? Согласен с автором!`
      },
      {
        "text": `Планируете записать видосик на эту тему?`
      },
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили. Планируете записать видосик на эту тему?`
      }
    ]
  },
  {
    "title": `Самый лучший музыкальный альбом этого года`,
    "announce": `Он написал больше 30 хитов.   Как начать действовать? Для начала просто соберитесь.`,
    "fullText": `Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами.   Помните, небольшое количество ежедневных упражнений лучше, чем один раз, но много.   Простые ежедневные упражнения помогут достичь успеха.   Освоить вёрстку несложно. Возьмите книгу новую книгу и закрепите все упражнения на практике.`,
    "categories": [`Музыка`, `Программирование`],
    "picture": `asddDeqw.jpg`,
    "comments": [
      {
        "text": `Хочу такую же футболку :-) Совсем немного...`
      }
    ]
  },
  {
    "title": `Учим HTML и CSS`,
    "announce": `Бороться с прокрастинацией несложно. Просто действуйте. Маленькими шагами.   Рок-музыка всегда ассоциировалась с протестами. Так ли это на самом деле?   Этот смартфон — настоящая находка. Большой и яркий экран, мощнейший процессор — всё это в небольшом гаджете.`,
    "fullText": `Игры и программирование разные вещи. Не стоит идти в программисты, если вам нравятся только игры.`,
    "categories": [`Программирование`],
    "picture": `asddDeqw.jpg`,
    "comments": [
      {
        "text": `Плюсую, но слишком много буквы! Мне не нравится ваш стиль. Ощущение, что вы меня поучаете.`
      },
      {
        "text": `Это где ж такие красоты?`
      },
      {
        "text": `Согласен с автором!`
      },
      {
        "text": `Мне не нравится ваш стиль. Ощущение, что вы меня поучаете.`
      }
    ]
  },
  {
    "title": `Борьба с прокрастинацией`,
    "announce": `Он написал больше 30 хитов.   Альбом стал настоящим открытием года. Мощные гитарные рифы и скоростные соло-партии не дадут заскучать`,
    "fullText": `Это один из лучших рок-музыкантов.`,
    "categories": [`Музыка`, `Разное`],
    "picture": `asddDeqw.jpg`,
    "comments": [
      {
        "text": `Давно не пользуюсь стационарными компьютерами. Ноутбуки победили. Мне не нравится ваш стиль. Ощущение, что вы меня поучаете. Мне кажется или я уже читал это где-то?`
      }
    ]
  }
];

const app = express();
app.use(express.json());

beforeAll(async () => {
  await initDB(mockDB, mockArticles, mockCategories, users);
  searchRoutes(app, new SearchService(mockDB));
});

describe(`API returns article based on search query`, () => {
  let response;

  beforeAll(async () => {
    response = await request(app)
      .get(`/search`)
      .query({
        query: `Борьба с`
      });
  });

  test(`Status code 200`, () => expect(response.statusCode).toBe(HttpCode.OK));
  test(`2 offer found`, () => expect(response.body.length).toBe(2));
  test(`Article has correct title`, () => expect(response.body[1].title).toBe(`Борьба с прокрастинацией`));
});

test(`API returns code 404 if nothing is found`,
    () => request(app)
      .get(`/search`)
      .query({
        query: `Не найду тебя`
      })
      .expect(HttpCode.NOT_FOUND)
);

test(`API returns 400 when query string is absent`,
    () => request(app)
      .get(`/search`)
      .expect(HttpCode.BAD_REQUEST)
);
