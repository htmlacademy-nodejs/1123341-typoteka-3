extends ../layout.pug

block content
  -
    const foundUser = (userId) => allUsers.find((user) => user.id === userId);
    const filteredCategories = categories
      .filter((category) => article.categories.find((itemCategory) => category.name === itemCategory.name));

  .wrapper
    include ../partials/header.pug
    main
      section.post
        h1.visually-hidden Пост
        section.post__content
          h2.visually-hidden Основное содержание
          .post__wrapper
            .post__head
              a.post__backwards.button.button--backwards(href='#') Назад
              time.post__date(datetime=`${formatDate(dayjs, article.createdAt, `tagFormat`)}`) #{formatDate(dayjs, article.createdAt, `visualFormat`)}
              h2.post__title.title.title--main #{article.title}
              ul.post__themes.themes
                each category in filteredCategories
                  li.themes__item
                    a.themes__item-link(href='#')
                      | #{category.name}
                      sup #{category.sumOfEquals}
                    button.themes__remove-btn(type='button') Удалить категорию
            .post__picture
              img(src=`/img/${article.picture}@1x.jpg` alt=article.title)
            .post__text
              h3 #{article.title}
              p.
                #{article.announce}
                
              p #{article.fullText}
        .post__wrapper.post__wrapper--comments
          section.post__comments.comments
            if articleComments.length === 0
              h2.comments__title.title.title--middle Комментарии отсутствуют
            else
              h2.comments__title.title.title--middle Комментарии
              ul.comments__list
                each comment in articleComments
                  li.comments__comment
                    .comments__avatar.avatar
                      img(src=`/img/${foundUser(comment.userId).userAvatar}` alt='аватар пользователя')
                    .comments__text
                      .comments__head
                        p #{foundUser(comment.userId).userName} #{foundUser(comment.userId).userSurname} •
                        time.comments__date(datetime=`${formatDate(dayjs, comment.createdAt, `tagFormat`)}`) #{formatDate(dayjs, comment.createdAt, `visualFormat`)}
                      p.comments__message #{comment.text}
            if isLogged
              .comments__footer.comments__footer--user
                form(action=`/articles/${article.id}` method='POST' enctype="multipart/form-data" autocomplete="off")
                  .comments__avatar.avatar
                    img(src=`/img/${userAvatar}` alt='аватар пользователя')
                  label
                    textarea(rows='1' name='user-comment' placeholder='Присоединиться к обсуждению')
                  button.comments__button.button.button--colored(type='submit') Опубликовать
            else
              .comments__footer.comments__footer--visitor
                button.comments__button.button.button--colored(type='submit') Войти
                .comments__registration
                  p.text.text--signature
                    b.title.title--small Регистрация
                    | Чтобы присоединиться к переписке нужно зарегистрироваться
    include ../partials/footer.pug
